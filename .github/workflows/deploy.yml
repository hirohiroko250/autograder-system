name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        cd backend
        python manage.py test

    - name: Check Django configuration
      run: |
        cd backend
        python manage.py check

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          # デプロイスクリプト実行
          cd /opt/autograder-system
          git pull origin main
          ./deploy/deploy.sh production

    - name: Health Check
      run: |
        # アプリケーションの応答確認
        for i in {1..30}; do
          if curl -s http://${{ secrets.HOST }}/ > /dev/null; then
            echo "✅ Application is responding"
            break
          elif [ $i -eq 30 ]; then
            echo "❌ Application failed to respond"
            exit 1
          else
            echo "Waiting for application... (attempt $i/30)"
            sleep 5
          fi
        done

    - name: Notify deployment success
      if: success()
      run: |
        echo "🎉 Deployment completed successfully!"
        echo "📱 Application: http://${{ secrets.HOST }}/"
        echo "🔧 Admin: http://${{ secrets.HOST }}/admin/"