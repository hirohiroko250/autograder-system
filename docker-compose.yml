services:
  # PostgreSQL データベース
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: autograder_db
      POSTGRES_USER: autograder_user
      POSTGRES_PASSWORD: autograder_password_2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Django バックエンド
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://autograder_user:autograder_password_2025@db:5432/autograder_db
      - DJANGO_SECRET_KEY=your-super-secret-key-change-this-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Next.js フロントエンド（zyukupage）
  frontend-zyuku:
    build:
      context: ./frontend/zyukupage
      dockerfile: Dockerfile
    restart: always
    environment:
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api
      - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app-network

  # Next.js フロントエンド（classroom） - 一時的にコメントアウト
  # frontend-classroom:
  #   build:
  #     context: ./frontend/classroom
  #     dockerfile: Dockerfile
  #   restart: always
  #   environment:
  #     - NEXT_PUBLIC_API_BASE_URL=http://localhost:8000/api
  #     - NODE_ENV=production
  #   ports:
  #     - "3001:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - app-network

  # Nginx リバースプロキシ（本番用）
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
    depends_on:
      - backend
      - frontend-zyuku
      # - frontend-classroom
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge