services:
  # PostgreSQL データベース
  db:
    image: postgres:14
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: autograder_db
      POSTGRES_USER: autograder_user
      POSTGRES_PASSWORD: autograder_password_2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # Django バックエンド
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: autograder.settings_production
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    depends_on:
      - db
    networks:
      - app-network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn autograder.wsgi:application --config gunicorn.conf.py"

  # Next.js フロントエンド（zyukupage）
  frontend-zyuku:
    build:
      context: ./frontend/zyukupage
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_API_BASE_URL: /api
      INTERNAL_API_BASE_URL: http://backend:8000/api
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - app-network

  # Next.js フロントエンド（classroom）
  frontend-classroom:
    build:
      context: ./frontend/classroom
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      NEXT_PUBLIC_API_BASE_URL: /api
      INTERNAL_API_BASE_URL: http://backend:8000/api
      NODE_ENV: production
    depends_on:
      - backend
    networks:
      - app-network

  # Nginx リバースプロキシ（本番用）
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
      - frontend-zyuku
      - frontend-classroom
    networks:
      - app-network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge
